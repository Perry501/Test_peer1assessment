set.seed(678910)
for (i in 1:40){
coinFlip1 <- rbinom(1, size = 1, prob = 0.5)
coinFlip2 <- rbinom(1, size = 1, prob = 0.5)
if (coinFlip1) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,5), each = 5)
}
if (coinFlip2){
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,5),5)
}
}
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[ , nrow(dataMatrixOrdered):1])
plot(rep(c(0,1), each = 5), pch = 19, xlab = "Column", ylab = "Pattern 1")
plot(rep(c(0,1), 5), pch = 19, xlab = "Column", ylab = "Pattern 2")
plot(svd2$v[,1], pch = 19, xlab = "Column", ylab = "First right singular vector")
plot(svd2$v[,2], pch = 19, xlab = "Column", ylab = "Second right singular vector")
image(t(dataMatrixOrdered)[ , nrow(dataMatrixOrdered):1])
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1,2))
plot(svd1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(svd1$d^2/sum(svd1$d^2), xlab = "Column", ylab = "Pop. of variance explained", pch = 19)
dataMatrix2 <- dataMatrixOrdered
dataMatrix2[sample(1:100, size = 40, replace = FALSE)] <- NA
svd1 <- svd(scale(dataMatrix2))
library(impute)
install.packages("impute")
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(0.5)
pal(seq(0,1,len = 10))
pal <- colorRampPalette(c("red","yellow"))
pal(2)
pal(10)
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
plot(x,y,pch = 19)
plot(x,y,col = rgb(0,0,0,0.2), pch = 19)
swirl()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, "red")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
dismt
distmt
cmat
points(cx, cy, col = c("red", "orange, "purple), pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19*, cex = 2, col = cols1[newClust])
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = "kmObj$cluster", pch = 19, cex = 2)
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
0
swirl()
options(editor = "internal")
swirl()
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %% diag %% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] * svd1$d[1] %*% svd1$v[,1]
a1 <- svd1$u[,1] * svd1$d[1] %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1] %*% svd1$d[1:2] %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(cbind(sub1[,10:12], maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(dplyr)
library(ggplot2)
setwd("~/Data Science Course/Reproducible Research/Week 2")
file <- "activity.csv"
df <- read.csv(file, header = TRUE)
dt <- as.data.table(df)
library(dplyr)
library(ggplot2)
library(data.table)
dt <- as.data.table(df)
View(dt)
dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
library(manipulate)
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
library(lubridate)
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
library(ggrepel)
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
library(scales)
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
setwd("~/Data Science Course/Reproducible Research/Week 2")
file <- "activity.csv"
df <- read.csv(file, header = TRUE)
dt <- as.data.table(df)
dt <- dt[ ,':='(MeanStepsPerDay = mean(steps), by = date)]
View(dt)
dt <- dt[ , ':=' (MeanStepsPerDay = mean(steps)), by = date]
View(dt)
setwd("~/Data Science Course/Reproducible Research/Week 2")
file <- "activity.csv"
df <- read.csv(file, header = TRUE)
dt <- as.data.table(df)
dt <- dt[ , ':=' (MeanStepsPerDay = mean(steps)), by = date]
View(dt)
plot1 <- distinct(dt[, .(date, MeanStepsPerDay)])
p1 <- ggplot(plot1, aes(x = date))
p1 + geom_histogram()
p1 <- ggplot(plot1, aes(x = date))
p1 + geom_histogram(stat = "count")
?aggregate
meanSteps <- aggregate(steps ~ date, data = dt, mean, na.rm = T)
View(meanSteps)
meanSteps <- aggregate(steps ~ date, data = dt, mean)
View(meanSteps)
hist(meanSteps$steps)
View(plot1)
setwd("~/Data Science Course/Reproducible Research/Week 2")
file <- "activity.csv"
df <- read.csv(file, header = TRUE)
dt <- as.data.table(df)
dt[ ,':='(TotalStepsPerDay = sum(steps)), by = date]
View(dt)
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(stat = "count")
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(stat = "count", binwidth = date)
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(stat = "count", binwidth = "date")
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(stat = "count", binwidth = 1)
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(stat = "identity", binwidth = 1)
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_histogram()
dt[ ,':='(TotalStepsPerDay = sum(steps)), by = date]
plot1 <- distinct(dt[, .(date, TotalStepsPerDay)])
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_histogram()
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_histogram(stat = "identity")
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_histogram(stat = "identity", bins = 1)
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_histogram(stat = "identity", bins = 1, binwidth = 1, pad = 1)
View(plot1)
p1 <- ggplot(dt, aes(x = steps))
p1 + geom_histogram(stat = "bin", binwidth = 288)
p1 <- ggplot(dt, aes(x = steps))
p1 + geom_histogram(stat = "identity", binwidth = 300)
p1 <- ggplot(dt, aes(x = steps))
p1 + geom_histogram(stat = "count", binwidth = 300)
p1 <- ggplot(dt, aes(x = steps))
p1 + geom_histogram(stat = "bin", binwidth = 300)
p1 <- ggplot(plot1, aes(x = date, y = steps))
p1 + geom_bar(stat = "identity")
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_bar(stat = "identity")
setwd("~/Data Science Course/Reproducible Research/Week 2")
file <- "activity.csv"
df <- read.csv(file, header = TRUE, colClasses = c("integer", "Date", "factor"))
dt <- as.data.table(df)
dt[ ,':='(TotalStepsPerDay = sum(steps)), by = date]
plot1 <- distinct(dt[, .(date, TotalStepsPerDay)])
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_bar(stat = "identity")
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_bar(stat = "identity") +
labs("Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps") +
theme_bw()
p1 <- ggplot(plot1, aes(x = date, y = TotalStepsPerDay))
p1 + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps") +
theme_bw()
?tapply
mean(plot1$TotalStepsPerDay)
median(plot1$TotalStepsPerDay)
mean(plot1$TotalStepsPerDay, na.rm = TRUE)
median(plot1$TotalStepsPerDay, na.rm = TRUE)
dt[ , ':='(AverageStepsPerInterval = mean(steps)), by interval]
View(dt)
dt[ , ':='(AverageStepsPerInterval = mean(steps)), by = interval]
View(dt)
dt[ , ':='(AverageStepsPerInterval = mean(steps, na.rm = T)), by = interval]
View(meanSteps)
View(dt)
plot2 <- disntict(dt[, .(interval, AverageStepsPerInterval)])
plot2 <- distinct(dt[, .(interval, AverageStepsPerInterval)])
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_line(stat = "identity")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1)
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps") +
theme_bw()
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps")
class(dt$interval)
summary(dt$interval)
str(dt$interval)
plot2$interval <- factor(plot2$interval, levels = plot2$interval[1:288] )
str(dt$interval)
View(plot2)
str(plot2$interval)
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Histogram of Total Steps Taken Each Day", x = "Date", y = "Total Number of Steps")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps")
p2 <- ggplot(plot2, aes(x = as.numeric(interval), y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps")
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 30))
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 100))
max(plot2$AverageStepsPerInterval)
plot2[plot2$steps == max(plot2$AverageStepsPerInterval), ]
plot2[plot2$AverageStepsPerInterval == max(plot2$AverageStepsPerInterval), ]
sum(is.na(dt))
sum(is.na(dt$steps))
InputData <- dt
for (i in 1:nrow(InputData)) {
if(is.na(InputData$steps[i])) {
InputData$steps[i] <- plot2[which(InputData$interval[i] == plot2$interval), ]$AverageStepsPerInterval
}
}
View(InputData)
sum(is.na(dt$steps))
InputData <- as.data.table(df)
for (i in 1:nrow(InputData)) {
if(is.na(InputData$steps[i])) {
InputData$steps[i] <- plot2[which(InputData$interval[i] == plot2$interval), ]$AverageStepsPerInterval
}
}
InputData[ ,':='(TotalStepsPerDay = sum(steps)), by = date]
p3 <- ggplot(plot3, aes(x = date, y = TotalStepsPerDay))
p3 + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Date", y = "Total Number of Steps") +
theme_bw()
print(p3)
plot3 <- distinct(InputData[ , .(date, TotalStepsPerDay)])
p3 <- ggplot(plot3, aes(x = date, y = TotalStepsPerDay))
p3 + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Date", y = "Total Number of Steps") +
theme_bw()
print(p3)
View(plot3)
p3 <- ggplot(plot3, aes(x = date, y = TotalStepsPerDay))
p3 + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Date", y = "Total Number of Steps") +
theme_bw()
mean(plot3$TotalStepsPerDay, na.rm = TRUE)
median(plot3$TotalStepsPerDay, na.rm = TRUE)
mean(plot1$TotalStepsPerDay, na.rm = TRUE)
median(plot1$TotalStepsPerDay, na.rm = TRUE)
FullData$weekdays <- weekdays(FullData$date)
sum(is.na(dt$steps))
FullData <- as.data.table(df)
for (i in 1:nrow(FullData)) {
if(is.na(FullData$steps[i])) {
FullData$steps[i] <- plot2[which(FullData$interval[i] == plot2$interval), ]$AverageStepsPerInterval
}
}
FullData[ ,':='(TotalStepsPerDay = sum(steps)), by = date]
plot3 <- distinct(FullData[ , .(date, TotalStepsPerDay)])
p3 <- ggplot(plot3, aes(x = date, y = TotalStepsPerDay))
p3 + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Date", y = "Total Number of Steps") +
theme_bw()
FullData$weekdays <- weekdays(FullData$date)
View(FullData)
factor(FullData$weekdays)
levels(FullData$weekdays) <- list(weekday = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday"),
weekend = c("Saturday", "Sunday"))
factor(FullData$weekdays)
levels(FullData$weekdays)
table(FullData$weekdays)
FullData$weekdays <- factor(format(FullData$date, "%A"))
levels(FullData$weekdays) <- list(weekday = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday"),
weekend = c("Saturday", "Sunday"))
table(FullData$weekdays)
FullData[ , ':='(AverageStepsPerInterval = mean(steps)), by = .(interval, weekdays)]
View(FullData)
plot4 <- distinct(FullData[ , .(weekdays, interval, AverageStepsPerInterval)])
p4 <- ggplot(plot4, aes(x = interval, y = AverageStepsPerInterval))
p4 + geom_point(stat = "identity") +
geom_line(group = 1) +
facet_grid(weekdays ~ . ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 100))
plot4$interval <- factor(plot4$interval, levels = plot4$interval[1:288] )
p4 <- ggplot(plot4, aes(x = interval, y = AverageStepsPerInterval))
p4 + geom_point(stat = "identity") +
geom_line(group = 1) +
facet_grid(weekdays ~ . ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 100))
q1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
q1 + geom_histogram(binwidth = 1500)
q1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
q1 + geom_histogram(binwidth = 1500, color = "black", fill = "blue")
q1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
q1 + geom_histogram(binwidth = 1000, color = "black", fill = "blue")
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(binwidth = 1000, color = "black", fill = "blue") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
p3 <- ggplot(plot3, aes(x = TotalStepsPerDay))
p3 + geom_histogram(binwidth = 1000, color = "black", fill = "blue") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Date", y = "Total Number of Steps") +
theme_bw()
p3 <- ggplot(plot3, aes(x = TotalStepsPerDay))
p3 + geom_histogram(binwidth = 1000, color = "black", fill = "blue") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
p3 <- ggplot(plot3, aes(x = TotalStepsPerDay))
p3 + geom_histogram(binwidth = 1000, color = "black", fill = "red") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(binwidth = 1000, color = "black", fill = "red") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
?round
p1 <- ggplot(plot1, aes(x = TotalStepsPerDay))
p1 + geom_histogram(binwidth = 1000, color = "black", fill = "red") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
ggsave(p1.png, height = 12, width = 12, dpi = 600)
ggsave("p1.png", height = 12, width = 12, dpi = 600)
p2 <- ggplot(plot2, aes(x = interval, y = AverageStepsPerInterval))
p2 + geom_point(stat = "identity") +
geom_line(group = 1) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 100))
ggsave("p2.png", height = 12, width = 12, dpi = 600)
p3 <- ggplot(plot3, aes(x = TotalStepsPerDay))
p3 + geom_histogram(binwidth = 1000, color = "black", fill = "red") +
labs(title = "Histogram of Total Steps Taken Each Day",
x = "Total Steps in the Day", y = "Frequency") +
theme_bw()
ggsave("p3.png", height = 12, width = 12, dpi = 600)
p4 <- ggplot(plot4, aes(x = interval, y = AverageStepsPerInterval))
p4 + geom_point(stat = "identity") +
geom_line(group = 1) +
facet_grid(weekdays ~ . ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Average Daily Activity Pattern",
x = "5-minute Interval", y = "Average Number of Steps") +
scale_x_discrete(breaks = seq(0, 2355, 100))
ggsave("p4.png", height = 12, width = 12, dpi = 600)
